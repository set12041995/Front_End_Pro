const userData = {
  USD: 1000,
  EUR: 900,
  UAH: 15000,
  BIF: 20000,
  AOA: 100,
};

const bankData = {
  USD: {
    max: 3000,
    min: 100,
    img: "üíµ",
  },
  EUR: {
    max: 1000,
    min: 50,
    img: "üí∂",
  },
  UAH: {
    max: 0,
    min: 0,
    img: "üí¥",
  },
  GBP: {
    max: 10000,
    min: 100,
    img: "üí∑",
  },
};

function getMoney() {
  return new Promise((resolve, reject) => {
    let answer;
    while (answer !== "—Ç–∞–∫" && answer !== "–Ω—ñ") {
      answer = prompt(
        `–ß–∏ –±–∞–∂–∞—î—Ç–µ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç—ñ? (–≤–≤–µ–¥—ñ—Ç—å '—Ç–∞–∫' –∞–±–æ '–Ω—ñ')`
      )
        .trim()
        .toLowerCase();
    }
    if (answer == "—Ç–∞–∫") {
      resolve();
    } else {
      reject();
    }
  });
}

getMoney()
  .then(checkBalance)
  .catch(takeCash)
  .finally(() => {
    console.log("–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä");
  });

function checkBalance() {
  let checkBalanceAnswer = "";
  while (!userData.hasOwnProperty(checkBalanceAnswer)) {
    checkBalanceAnswer = prompt(`–ë–∞–ª–∞–Ω—Å —è–∫–æ—ó –≤–∞–ª—é—Ç–∏ –≤–∏ –±–∞–∂–∞—î—Ç–µ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å?`)
      .trim()
      .toUpperCase();
  }

  console.log(
    `–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å ${userData[checkBalanceAnswer]} ${checkBalanceAnswer}.`
  );
}

function takeCash() {
  let currencyAnswer = "";
  const availableCurrencies = checkAvailableCurrency();
  while (!availableCurrencies.includes(currencyAnswer)) {
    currencyAnswer = prompt(`–Ø–∫—É –≤–∞–ª—é—Ç—É –±–∞–∂–∞—î—Ç–µ –∑–Ω—è—Ç–∏?`).trim().toUpperCase();
  }

  let sumToTake;
  while (isNaN(sumToTake) || sumToTake < 0) {
    sumToTake = +prompt(`–Ø–∫—É —Å—É–º—É –±–∞–∂–∞—î—Ç–µ –∑–Ω—è—Ç–∏?`);
  }

  if (sumToTake > userData[currencyAnswer]) {
    console.log(`–ù–∞ –≤–∞—à–æ–º—É –±–∞–ª–∞–Ω—Å—ñ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≥—Ä–æ—à–µ–π`);
  } else if (sumToTake > bankData[currencyAnswer].max) {
    console.log(
      `–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${bankData[currencyAnswer].max} `
    );
  } else if (sumToTake < bankData[currencyAnswer].min) {
    console.log(
      `–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${bankData[currencyAnswer].min} `
    );
  } else {
    console.log(
      `–û—Å—å –í–∞—à—ñ –≥—Ä–æ—à—ñ - ${sumToTake} ${currencyAnswer} ${bankData[currencyAnswer].img}`
    );
  }
}

function checkAvailableCurrency() {
  const availableInBankomat = Object.keys(bankData).filter(
    (currency) => bankData[currency].max > 0
  );
  const availableInUserData = Object.keys(userData).filter((currency) =>
    availableInBankomat.includes(currency)
  );
  return availableInUserData;
}
